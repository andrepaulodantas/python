# -*- coding: utf-8 -*-
"""Atividade5_AndreAraujo.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1-gaXqD-ipr2n_9w_27W6zjux1_ZbtEsQ
"""

# Função de geração de numero aleatorios
def linearCongruentialMethod(Xo, m, a, c, randomNums, noOfRandomNums): 

# inicialização da semente 
    randomNums[0] = Xo 

   
    for i in range(1, noOfRandomNums): 

        
        randomNums[i] = ((randomNums[i - 1] * a) + c) % m 


if __name__ == '__main__': 
    
 # semente
    Xo = 17 
      
    # parametro do modulo
    m = 256 
      
    # termo multiplicador
    a = 1

    # termo multiplicador
    c = 121
    
    noOfRandomNums = 100

    # To store random numbers 
    randomNums = [0] * (noOfRandomNums) 

    # Function Call 
    linearCongruentialMethod(Xo, m, a, c, randomNums, noOfRandomNums) 
    
    # Print the generated random numbers 
    for i in randomNums:
        
        print(i/m, end = " ") 


import matplotlib.pyplot as plt

Lista = [float(i) / m  for i in randomNums]

plt.hist(Lista, 100, rwidth=1)
plt.title('Gráfico Para 100')
plt.ylabel('Frequência ')
plt.show()



# Função de geração de numero aleatorios
def linearCongruentialMethod(Xo, m, a, c, randomNums, noOfRandomNums): 

# inicialização da semente 
    randomNums[0] = Xo 

   
    for i in range(1, noOfRandomNums): 

        
        randomNums[i] = ((randomNums[i - 1] * a) + c) % m 


if __name__ == '__main__': 
    
 # semente
    Xo = 17 
      
    # parametro do modulo
    m = 256 
      
    # termo multiplicador
    a = 1

    # termo multiplicador
    c = 121
    
    noOfRandomNums = 1000

    # To store random numbers 
    randomNums = [0] * (noOfRandomNums) 

    # Function Call 
    linearCongruentialMethod(Xo, m, a, c, randomNums, noOfRandomNums) 
    
    # Print the generated random numbers 
    for i in randomNums:
        
        print(i/m, end = " ") 

import matplotlib.pyplot as plt

Lista = [float(i) / m for i in randomNums]

plt.hist(Lista, 1000, rwidth=1)
plt.title('Gráfico Para 1000')
plt.ylabel('Frequência ')
plt.show()